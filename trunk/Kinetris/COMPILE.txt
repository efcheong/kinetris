                            HOW TO COMPILE KINETRIS


________________________________________________________________________________


WINDOWS
MICROSOFT VISUAL STUDIO 2010


1. Install OpenNI

Download OpenNI 1.2.0.7 Unstable SDK from
<http://conanchen.com/Kinetris/download/Windows/OpenNI>. Run
"OpenNI-Win32-1.2.0.7-Dev.msi" to install.

(I chose to install to "C:\SDK\OpenNI\1.2\".)

(Alternatively, download "OpenNI Unstable Build for Windows x86 (32-bit)
v1.2.0.7 Development Edition" from <http://openni.org/>.)


2. Install NITE

Download PrimeSense NITE 1.3.1.6 Unstable SDK from
<http://conanchen.com/Kinetris/download/Windows/NITE>. Run
"NITE-Win32-1.3.1.6-Dev.msi" to install.

(I chose to install to "C:\SDK\NITE\1.3\".)

(Alternatively, download "PrimeSense NITE Unstable Build for Windows x86
(32-bit) v1.3.1.6 Development Edition" from <http://openni.org/>.)


3. Install SensorKinect device driver

Download SensorKinect 0.5 from
<http://conanchen.com/Kinetris/download/Windows/SensorKinect>. Run
"SensorKinect-Win-OpenSource32-5.0.1.32.msi" to install.

(I chose to install to the default location.)

(Alternatively, download "SensorKinect 0.5" from
<http://github.com/avin2/SensorKinect/>.)


4. Install Qt

You will need to compile Qt from source to use it with Visual Studio 2010.


4a. Download Qt

Download Qt Libraries 4.7.4 from
<http://get.qt.nokia.com/qt/source/qt-everywhere-opensource-src-4.7.4.zip>.
Unpack the archive, and place the files and folders from inside
"qt-everywhere-opensource-src-4.7.4" in a folder of your choice.

Note: To avoid complications, do not place in a location with spaces (e.g.: do
not place in "C:\Program Files\Qt\").

(I chose to place in "C:\SDK\Qt\4.7\".)

(Alternatively, download the source code for "Qt Libraries 4.7.4" from
<http://qt.nokia.com/>.)


4b. Download jom

Download jom from <ftp://ftp.qt.nokia.com/jom/jom.zip>. Unpack the archive to a
folder of your choice.

(I chose to place in "C:\SDK\Qt\jom\".)

(Alternatively, download "jom" from <ftp://ftp.qt.nokia.com/jom/>.)


4c. Configure system environment variables

Open the Start menu, and go to "Control Panel\System and Security\System". Go to
"Advanced system settings" in the tasks pane on the left. Go to the "Advanced"
tab, and click on "Environment Variables...".

In the "System variables" list, select "Path", and click on "Edit...". Edit the
"Variable value" field to add ";C:\SDK\Qt\4.7\bin" to the end (if you placed Qt
in a different location than I did, instead add ";", followed by the location
that Qt was placed in, followed by "\bin"). Click on "OK".

In the "System variables" list, click on "New...". Set the "Variable name" field
to "QTDIR", and set the "Variable value" field to "C:\SDK\Qt\4.7" (if you placed
Qt in a different location than I did, instead set the field to the location
that Qt was placed in). Click on "OK".

In the "System variables" list, click on "New...". Set the "Variable name" field
to "QMAKESPEC", and set the "Variable value" field to "win32-msvc2010". Click on
"OK".

Click on "OK" for each window.


4d. Compile Qt

Open the Start menu, and go to "All Programs\Microsoft Visual Studio 2010\
Visual Studio Tools\Visual Studio Command Prompt". In the console window that
opens, type the following commands, replacing "#" with the number of cores in
your CPU:

	cd /d "C:\SDK\Qt\4.7"

	configure -debug-and-release -opensource -platform win32-msvc2010 -no-q3support -no-webkit -no-phonon -no-phonon-backend

	"C:\SDK\Qt\jom\jom" -j #

Note: This process can take several hours to complete. A multi-core CPU and a
SSD can speed this up significantly.

Note: Qt uses up several GB of disk space. This can be reduced by a few GB by
deleting the temporary files created by the compile process. After the process
is complete, in the console window, type the following commands:

	"C:\SDK\Qt\jom\jom" clean


5. Confirm/correct paths in project file for Visual Studio

If you installed Qt, OpenNI, or NITE to a different location than I did, you
will need to correct the paths in the project file for Visual Studio.

Open "Kinetris.vcxproj" in Visual Studio.

In the "Solution Explorer" panel, right-click on the "Kinetris" project, and go
to "Properties". Under "Configuration Properties" on the left, select "NMake".
Under "IntelliSense" on the right, edit the "Include Search Path" field to
correct the locations of Qt, OpenNI, NITE (ensure that each path ends with
"\include").

Click on "OK".


6. Confirm/correct paths in project file for Qt

If you installed Qt, OpenNI, or NITE to a different location than I did, you
will need to correct the paths in the project file for Qt.

Open "Kinetris.pro" in Visual Studio.

Find the "INCLUDEPATH" qmake variable, and edit the value of the variable to
correct the locations of OpenNI and NITE (ensure that each path ends with
"/Include", and be careful to use "/" instead of "\").

Find the "LIBS" qmake variable, and edit the value of the variable to correct
the locations of OpenNI and NITE (ensure that each path ends with "/Lib", and
be careful to use "/" instead of "\").

Save the file.


7. Compile

You should now be able to compile the project. Go to the "Debug" menu and select
"Start Debugging", or go to the "Build" menu and select "Build Solution". Expect
to see a lot of warnings--this is normal. If there are errors, however, they are
most likely because some of the paths were not entered correctly in the previous
steps.

________________________________________________________________________________


